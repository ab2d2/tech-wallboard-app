[
    {
        "id": "e81c82f0fb798f75",
        "type": "tab",
        "label": "Websockets",
        "disabled": false,
        "info": "Connections for all websockets",
        "env": []
    },
    {
        "id": "ddabf604f4570dc6",
        "type": "subflow",
        "name": "Get pull request data",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 80,
                "y": 120,
                "wires": [
                    {
                        "id": "a23c2e7f030ac9c0"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 1180,
                "y": 120,
                "wires": [
                    {
                        "id": "56f0861332a1ed7e",
                        "port": 0
                    }
                ]
            },
            {
                "x": 740,
                "y": 180,
                "wires": [
                    {
                        "id": "701f027f0ba51940",
                        "port": 1
                    }
                ]
            }
        ],
        "env": [
            {
                "name": "ELEMENT_ID",
                "type": "str",
                "value": "github"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "b2e529d46e7cf874",
        "type": "subflow",
        "name": "Jira",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 200,
                "y": 140,
                "wires": [
                    {
                        "id": "b79523fb1918ec7b"
                    }
                ]
            }
        ],
        "out": [
            {
                "x": 640,
                "y": 140,
                "wires": [
                    {
                        "id": "9cccb65ad8e8f865",
                        "port": 0
                    }
                ]
            },
            {
                "x": 640,
                "y": 200,
                "wires": []
            }
        ],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "3c30ffa1bea72201",
        "type": "subflow",
        "name": "Update page object",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 360,
                "y": 220,
                "wires": [
                    {
                        "id": "87c10e3b6f35e330"
                    }
                ]
            }
        ],
        "out": [],
        "env": [
            {
                "name": "overwrite",
                "type": "bool",
                "value": "false"
            }
        ],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "59cae46cae658f00",
        "type": "subflow",
        "name": "Send updates",
        "info": "",
        "category": "",
        "in": [
            {
                "x": 100,
                "y": 180,
                "wires": [
                    {
                        "id": "66ae3495b7e70d71"
                    }
                ]
            }
        ],
        "out": [],
        "env": [],
        "meta": {},
        "color": "#DDAA99"
    },
    {
        "id": "1768fb7d724da3dc",
        "type": "websocket-listener",
        "path": "ws/data",
        "wholemsg": "false"
    },
    {
        "id": "a23c2e7f030ac9c0",
        "type": "http request",
        "z": "ddabf604f4570dc6",
        "name": "Fetch Github Data",
        "method": "GET",
        "ret": "obj",
        "paytoqs": "body",
        "url": "https://api.github.com/repos/ab2d2/tech-wallboard-app/pulls?state=all",
        "tls": "",
        "persist": false,
        "proxy": "",
        "insecureHTTPParser": false,
        "authType": "",
        "senderr": false,
        "headers": [],
        "x": 230,
        "y": 120,
        "wires": [
            [
                "701f027f0ba51940"
            ]
        ]
    },
    {
        "id": "701f027f0ba51940",
        "type": "switch",
        "z": "ddabf604f4570dc6",
        "name": "Continue if successful",
        "property": "statusCode",
        "propertyType": "msg",
        "rules": [
            {
                "t": "eq",
                "v": "200",
                "vt": "str"
            },
            {
                "t": "neq",
                "v": "200",
                "vt": "str"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 480,
        "y": 120,
        "wires": [
            [
                "56f0861332a1ed7e"
            ],
            []
        ]
    },
    {
        "id": "56f0861332a1ed7e",
        "type": "function",
        "z": "ddabf604f4570dc6",
        "name": "Transform",
        "func": "const prs = msg.payload;\n\nconst openPrs = prs.filter((pr) => pr.state === 'open').length;\nconst closedPrs = prs.filter((pr) => pr.state === 'closed').length;\n\nmsg.payload = {\n    id: env.get('ELEMENT_ID'),\n    categories: ['Development', 'PRs'],\n    primaryElement: {\n        title: 'Pull Requests',\n        type: 'pie',\n        data: [\n            {\n                label: 'Open',\n                value: openPrs,\n            },\n            {\n                label: 'Closed',\n                value: closedPrs,\n            }\n        ]\n    }\n};\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 940,
        "y": 120,
        "wires": [
            []
        ]
    },
    {
        "id": "9cccb65ad8e8f865",
        "type": "template",
        "z": "b2e529d46e7cf874",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"id\": \"jira\",\n    \"categories\": [\"Delivery\", \"Stories\"],\n    \"primaryElement\": \n        {\n        \"type\": \"doughnut\",\n        \"title\": \"Stories Completed\",\n        \"data\": [\n                {\n                    \"label\": \"Last sprint\",\n                    \"value\": 10\n                },\n                {\n                    \"label\": \"This sprint\",\n                    \"value\": 15\n                }\n            ]\n        },\n    \"secondaryElement\": [\n        {\n        \"type\": \"bar\",\n        \"title\": \"Stories Completed\",\n        \"data\": [\n                {\n                    \"label\": \"Last sprint\",\n                    \"value\": 10\n                },\n                {\n                    \"label\": \"This sprint\",\n                    \"value\": 15\n                }\n            ]\n        },\n        {\n        \"type\": \"bar\",\n        \"title\": \"Stories Completed\",\n        \"data\": [\n                {\n                    \"label\": \"Last sprint\",\n                    \"value\": 10\n                },\n                {\n                    \"label\": \"This sprint\",\n                    \"value\": 15\n                }\n            ]\n        },\n        {\n        \"type\": \"bar\",\n        \"title\": \"Stories Completed\",\n        \"data\": [\n                {\n                    \"label\": \"Last sprint\",\n                    \"value\": 10\n                },\n                {\n                    \"label\": \"This sprint\",\n                    \"value\": 15\n                }\n            ]\n        },\n        {\n        \"type\": \"bar\",\n        \"title\": \"Stories Completed\",\n        \"data\": [\n                {\n                    \"label\": \"Last sprint\",\n                    \"value\": 10\n                },\n                {\n                    \"label\": \"This sprint\",\n                    \"value\": 15\n                }\n            ]\n        }\n    ]\n}",
        "output": "json",
        "x": 500,
        "y": 140,
        "wires": [
            []
        ]
    },
    {
        "id": "b79523fb1918ec7b",
        "type": "delay",
        "z": "b2e529d46e7cf874",
        "name": "",
        "pauseType": "delay",
        "timeout": "2",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "1",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 340,
        "y": 140,
        "wires": [
            [
                "9cccb65ad8e8f865"
            ]
        ]
    },
    {
        "id": "87c10e3b6f35e330",
        "type": "function",
        "z": "3c30ffa1bea72201",
        "name": "function 1",
        "func": "const id = msg.payload.id;\nconst pages = global.get(\"pages\");\n\nconst newPages= {\n    ...pages,\n    [id]: msg.payload\n}\n\nglobal.set(\"pages\", newPages);\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 520,
        "y": 220,
        "wires": [
            []
        ]
    },
    {
        "id": "9bc2c452.643d38",
        "type": "function",
        "z": "59cae46cae658f00",
        "name": "counter",
        "func": "const pages = Object.values(global.get(\"pages\"));\nlet index = flow.get(\"index\");\n\nconst currentPage = pages[index];\nmsg.payload = currentPage;\nglobal.set('currentPage', currentPage)\n\nindex++;\nif (index >= pages.length) {\n    index = 0;\n};\nflow.set(\"index\", index);\n\nreturn msg;",
        "outputs": 1,
        "timeout": "",
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 460,
        "y": 180,
        "wires": [
            [
                "3f32d013f2375148"
            ]
        ]
    },
    {
        "id": "fc921218.036df",
        "type": "delay",
        "z": "59cae46cae658f00",
        "name": "",
        "pauseType": "delay",
        "timeout": "5",
        "timeoutUnits": "seconds",
        "rate": "1",
        "nbRateUnits": "",
        "rateUnits": "second",
        "randomFirst": "1",
        "randomLast": "5",
        "randomUnits": "seconds",
        "drop": false,
        "allowrate": false,
        "outputs": 1,
        "x": 700,
        "y": 60,
        "wires": [
            [
                "9bc2c452.643d38"
            ]
        ]
    },
    {
        "id": "66ae3495b7e70d71",
        "type": "change",
        "z": "59cae46cae658f00",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "index",
                "pt": "flow",
                "to": "0",
                "tot": "num"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 240,
        "y": 180,
        "wires": [
            [
                "9bc2c452.643d38"
            ]
        ]
    },
    {
        "id": "e945bda23ab637ce",
        "type": "websocket out",
        "z": "59cae46cae658f00",
        "name": "",
        "server": "1768fb7d724da3dc",
        "client": "",
        "x": 1310,
        "y": 220,
        "wires": []
    },
    {
        "id": "6537205cae327132",
        "type": "change",
        "z": "59cae46cae658f00",
        "name": "",
        "rules": [
            {
                "t": "set",
                "p": "payload",
                "pt": "msg",
                "to": "currentPage",
                "tot": "global"
            }
        ],
        "action": "",
        "property": "",
        "from": "",
        "to": "",
        "reg": false,
        "x": 760,
        "y": 420,
        "wires": [
            [
                "ce6781f7cfc09a86"
            ]
        ]
    },
    {
        "id": "ce6781f7cfc09a86",
        "type": "websocket out",
        "z": "59cae46cae658f00",
        "name": "",
        "server": "1768fb7d724da3dc",
        "client": "",
        "x": 950,
        "y": 420,
        "wires": []
    },
    {
        "id": "e37d5f3fbee2f8ec",
        "type": "websocket in",
        "z": "59cae46cae658f00",
        "name": "",
        "server": "1768fb7d724da3dc",
        "client": "",
        "x": 230,
        "y": 420,
        "wires": [
            [
                "644f2b6669bf7e67"
            ]
        ]
    },
    {
        "id": "644f2b6669bf7e67",
        "type": "rbe",
        "z": "59cae46cae658f00",
        "name": "Send response if message is different",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 490,
        "y": 420,
        "wires": [
            [
                "6537205cae327132"
            ]
        ]
    },
    {
        "id": "3f32d013f2375148",
        "type": "function",
        "z": "59cae46cae658f00",
        "name": "Check if page is valid",
        "func": "\nfunction isPageValid(page)  {\n    if (!page.id) return false;\n    if (!page.primaryElement) return false;\n    if (!isElementValid(page.primaryElement)) return false;\n    if (page.secondaryElement && !isElementValid(page.secondaryElement)) {\n        return false;\n    }\n\n    return true;\n}\n\nfunction isElementValid(element) {\n    if (typeof element === 'string') return true;\n    if (Array.isArray(element)) {\n        let isValid = true;\n        for (const chart of element) {\n            if (!isChartValid(chart)) {\n                isValid = false;\n                break;\n            }\n        }\n        return isValid;\n    }\n\n    return isChartValid(element)\n}\n\nfunction isChartValid(chart) {\n    if (!chart.type) return false;\n    if (!chart.data) return false;\n\n    let dataValid = true;\n    for (const data of chart.data) {\n    if (!data.label) {\n        dataValid = false;\n        break;\n    }\n    }\n    return dataValid;\n}\n\nmsg.isValid = isPageValid(msg.payload);\n\nreturn msg;",
        "outputs": 1,
        "timeout": 0,
        "noerr": 0,
        "initialize": "",
        "finalize": "",
        "libs": [],
        "x": 700,
        "y": 180,
        "wires": [
            [
                "ca39838f5b40e8a5"
            ]
        ]
    },
    {
        "id": "ca39838f5b40e8a5",
        "type": "switch",
        "z": "59cae46cae658f00",
        "name": "Is page valid?",
        "property": "isValid",
        "propertyType": "msg",
        "rules": [
            {
                "t": "true"
            },
            {
                "t": "false"
            }
        ],
        "checkall": "true",
        "repair": false,
        "outputs": 2,
        "x": 920,
        "y": 180,
        "wires": [
            [
                "fc921218.036df",
                "f4543b133e90d8b0"
            ],
            [
                "9bc2c452.643d38"
            ]
        ]
    },
    {
        "id": "f4543b133e90d8b0",
        "type": "rbe",
        "z": "59cae46cae658f00",
        "name": "Send if page changes",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 1140,
        "y": 180,
        "wires": [
            [
                "e945bda23ab637ce",
                "f3cc1cc5723d6406"
            ]
        ]
    },
    {
        "id": "f3cc1cc5723d6406",
        "type": "debug",
        "z": "59cae46cae658f00",
        "name": "Log sent page",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 1320,
        "y": 140,
        "wires": []
    },
    {
        "id": "a2acf8661c2be077",
        "type": "inject",
        "z": "e81c82f0fb798f75",
        "name": "Run on startup",
        "props": [
            {
                "p": "payload"
            }
        ],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.5",
        "topic": "",
        "payload": "{\"id\":\"test\",\"categories\":[\"Development\",\"Test\"],\"primaryElement\":{\"type\":\"pie\",\"data\":[{\"label\":\"Point 1\",\"value\":1},{\"label\":\"Point 1\",\"value\":2}]}}",
        "payloadType": "json",
        "x": 360,
        "y": 120,
        "wires": [
            [
                "39667addc8e55845"
            ]
        ]
    },
    {
        "id": "363d496b015d63fd",
        "type": "inject",
        "z": "e81c82f0fb798f75",
        "name": "Simulate adding a page",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": false,
        "onceDelay": "5",
        "topic": "",
        "x": 120,
        "y": 900,
        "wires": [
            [
                "d314b1e96c981ebb"
            ]
        ]
    },
    {
        "id": "41107df94b2946a8",
        "type": "subflow:3c30ffa1bea72201",
        "z": "e81c82f0fb798f75",
        "name": "",
        "x": 530,
        "y": 900,
        "wires": []
    },
    {
        "id": "d314b1e96c981ebb",
        "type": "template",
        "z": "e81c82f0fb798f75",
        "name": "",
        "field": "payload",
        "fieldType": "msg",
        "format": "json",
        "syntax": "mustache",
        "template": "{\n    \"id\": \"jira-2\",\n    \"categories\": [\"Delivery\", \"Stories\"],\n    \"primaryElement\": {\n        \"type\": \"bar\",\n        \"title\": \"Stories Completed 2\",\n        \"data\": [\n            {\n                \"label\": \"Last sprint\",\n                \"value\": 5\n            },\n            {\n                \"label\": \"This sprint\",\n                \"value\": 12\n            }\n        ]\n    }\n}",
        "output": "json",
        "x": 320,
        "y": 900,
        "wires": [
            [
                "41107df94b2946a8"
            ]
        ]
    },
    {
        "id": "2db0fc54da79773f",
        "type": "inject",
        "z": "e81c82f0fb798f75",
        "name": "Run on interval",
        "props": [],
        "repeat": "",
        "crontab": "",
        "once": true,
        "onceDelay": "0.1",
        "topic": "",
        "x": 160,
        "y": 280,
        "wires": [
            [
                "0ba7dfd5c88c3863",
                "a328d6f1380db3d1"
            ]
        ]
    },
    {
        "id": "cf7e07634541bab7",
        "type": "debug",
        "z": "e81c82f0fb798f75",
        "name": "Print errors",
        "active": true,
        "tosidebar": true,
        "console": false,
        "tostatus": false,
        "complete": "payload",
        "targetType": "msg",
        "statusVal": "",
        "statusType": "auto",
        "x": 670,
        "y": 220,
        "wires": []
    },
    {
        "id": "86c29ca36fa17358",
        "type": "rbe",
        "z": "e81c82f0fb798f75",
        "name": "Update if changed",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 280,
        "wires": [
            [
                "5ab7b5994f09b8f7"
            ]
        ]
    },
    {
        "id": "0ba7dfd5c88c3863",
        "type": "subflow:ddabf604f4570dc6",
        "z": "e81c82f0fb798f75",
        "name": "",
        "x": 400,
        "y": 220,
        "wires": [
            [
                "86c29ca36fa17358"
            ],
            [
                "cf7e07634541bab7"
            ]
        ]
    },
    {
        "id": "39667addc8e55845",
        "type": "subflow:59cae46cae658f00",
        "z": "e81c82f0fb798f75",
        "name": "",
        "x": 620,
        "y": 120,
        "wires": []
    },
    {
        "id": "5ab7b5994f09b8f7",
        "type": "subflow:3c30ffa1bea72201",
        "z": "e81c82f0fb798f75",
        "name": "",
        "x": 930,
        "y": 300,
        "wires": []
    },
    {
        "id": "a328d6f1380db3d1",
        "type": "subflow:b2e529d46e7cf874",
        "z": "e81c82f0fb798f75",
        "name": "",
        "x": 370,
        "y": 340,
        "wires": [
            [
                "71c3041c058aeb21"
            ],
            [
                "cf7e07634541bab7"
            ]
        ]
    },
    {
        "id": "71c3041c058aeb21",
        "type": "rbe",
        "z": "e81c82f0fb798f75",
        "name": "Update if changed",
        "func": "rbe",
        "gap": "",
        "start": "",
        "inout": "out",
        "septopics": true,
        "property": "payload",
        "topi": "topic",
        "x": 690,
        "y": 340,
        "wires": [
            [
                "5ab7b5994f09b8f7"
            ]
        ]
    }
]